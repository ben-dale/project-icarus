{"version":3,"sources":["webpack:///./src/views/Avalon.vue?f097","webpack:///src/views/Avalon.vue","webpack:///./src/views/Avalon.vue?0e71","webpack:///./src/views/Avalon.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_m","on","$event","startNewGame","socket","_v","staticRenderFns","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,YAAYC,MAAM,CAAC,GAAK,QAAQ,CAACH,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,UAAU,GAAGJ,EAAIQ,GAAG,GAAGR,EAAIQ,GAAG,GAAGJ,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACF,EAAG,SAAS,CAACE,YAAY,gCAAgCG,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIW,aAAaX,EAAIY,WAAW,CAACZ,EAAIa,GAAG,0BAA0Bb,EAAIQ,GAAG,GAAGJ,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACF,EAAG,cAAc,CAACE,YAAY,gCAAgCC,MAAM,CAAC,GAAK,kBAAkB,CAACP,EAAIa,GAAG,4BAA4B,QACxpBC,EAAkB,CAAC,WAAa,IAAId,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,KAAK,CAACJ,EAAIa,GAAG,cAAcT,EAAG,IAAI,CAACJ,EAAIa,GAAG,2gBAA2gB,WAAa,IAAIb,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,KAAK,CAACJ,EAAIa,GAAG,cAAcT,EAAG,IAAI,CAACJ,EAAIa,GAAG,0QAA0QT,EAAG,IAAI,CAACJ,EAAIa,GAAG,kJAAkJT,EAAG,IAAI,CAACJ,EAAIa,GAAG,wMAAwMT,EAAG,IAAI,CAACJ,EAAIa,GAAG,oRAA4RT,EAAG,IAAI,CAACJ,EAAIa,GAAG,8HAA8HT,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIa,GAAG,kJAAkJT,EAAG,KAAK,CAACJ,EAAIa,GAAG,+OAA+OT,EAAG,KAAK,CAACJ,EAAIa,GAAG,mDAAmDT,EAAG,KAAK,CAACJ,EAAIa,GAAG,uDAAuD,WAAa,IAAIb,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,KAAK,CAACJ,EAAIa,GAAG,kB,uDC4D1sF,GACE,KAAF,MACE,WAAF,CACI,MAAJ,QAEE,QAAF,CACI,aAAJ,YACM,EAAN,gCAGE,KAAF,WAAI,IAAJ,OACA,OAUI,OANE,EAAN,aAAQ,SAAR,EAAQ,WAAR,gBAEI,EAAJ,sCACM,IAAN,OACM,EAAN,iBAAQ,KAAR,aAAQ,OAAR,yBAEA,CAAM,OAAN,KClFgV,I,YCO5UE,EAAY,eACd,EACAhB,EACAe,GACA,EACA,KACA,KACA,MAIa,aAAAC,E","file":"js/chunk-2d22d3c9.7e84c3a3.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\",attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"row\"},[_c('Title')],1),_vm._m(0),_vm._m(1),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-8 offset-md-2\"},[_c('button',{staticClass:\"btn btn-dark btn-lg btn-block\",on:{\"click\":function($event){return _vm.startNewGame(_vm.socket)}}},[_vm._v(\"Start a new game\")])])]),_vm._m(2),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-8 offset-md-2\"},[_c('router-link',{staticClass:\"btn btn-dark btn-lg btn-block\",attrs:{\"to\":\"/avalon/thing\"}},[_vm._v(\"Join an existing game\")])],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('h4',[_vm._v(\"The plot\")]),_c('p',[_vm._v(\" The Resistance: Avalon pits the forces of Good and Evil in a battle to control the future of civilization. Arthur represents the future of Britain, a promise of prosperity and honour, yet hidden among his brave warriors are Mordred's unscrupulous minions. These forces of evil are few but have knowledge of each other and remain hidden from all but one of Arthur's servants. Merlin alone knows the agents of evil, but he must speak of this only in riddles. If his true identity is discovered, all will be lost. \")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('h4',[_vm._v(\"The play\")]),_c('p',[_vm._v(\" There are two teams: Good and Evil. Each player is randomly assigned to either Good or Evil at the start of the game. Players in Good don't know the identity of anyone. Players in Evil know the identity of everyone in Evil, and thus can infer who is in Good. \")]),_c('p',[_vm._v(\" The aim of the game for Good is to succeed three quests. The aim of the game for Evil is to fail three quests. There are only five quests. \")]),_c('p',[_vm._v(\" Each round one player will be assigned to choose a number of players to set out on a quest. The quest will not start until it's proposed participants have been agreed by a majority of players. \")]),_c('p',[_vm._v(\" Once the quest proposal is agreed, the quest participants will vote on the outcome of the quest. Evil players on the quest can vote either \\\"Succeed\\\" or \\\"Fail\\\". Good players can vote only \\\"Succeed\\\". The quest will fail if a single Evil player on the quest votes \\\"Fail\\\". \")]),_c('p',[_vm._v(\" As well as being randomly assigned to a team at the start of the game, you are also assigned one of the following roles: \"),_c('ul',[_c('li',[_vm._v(\"Merlin: One player on Good is assigned the role of Merlin. Merlin knows the identity of everyone in Good, and thus can infer who is in Evil.\")]),_c('li',[_vm._v(\"Assassin: One player on Evil is assigned the role of Assassin. If Good manages to succeed three quests the Assassin will be given the opportunity to assassinate Merlin. If they succeed in assassinating Merlin they will steal the win.\")]),_c('li',[_vm._v(\"Loyal servent of Arthur: standard Good player\")]),_c('li',[_vm._v(\"Servant of Mordred: standard Evil player\")])])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row py-2\"},[_c('div',{staticClass:\"col-md-12 text-center\"},[_c('h5',[_vm._v(\"- or -\")])])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\" class=\"container\">\n    <div class=\"row\">\n      <Title />\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h4>The plot</h4>\n        <p>\n          The Resistance: Avalon pits the forces of Good and Evil in a battle to control the future of civilization. Arthur represents the future of Britain, a promise of prosperity and honour, yet hidden among his brave warriors are Mordred's unscrupulous minions. These forces of evil are few but have knowledge of each other and remain hidden from all but one of Arthur's servants. Merlin alone knows the agents of evil, but he must speak of this only in riddles. If his true identity is discovered, all will be lost.\n        </p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h4>The play</h4>\n        <p>\n          There are two teams: Good and Evil. Each player is randomly assigned to either Good or Evil at the start of the game. Players in Good don't know the identity of anyone. Players in Evil know the identity of everyone in Evil, and thus can infer who is in Good.\n        </p>\n        <p>\n          The aim of the game for Good is to succeed three quests. The aim of the game for Evil is to fail three quests. There are only five quests.\n        </p>\n        <p>\n          Each round one player will be assigned to choose a number of players to set out on a quest. The quest will not start until it's proposed participants have been agreed by a majority of players.\n        </p>\n        <p>\n          Once the quest proposal is agreed, the quest participants will vote on the outcome of the quest. Evil players on the quest can vote either \"Succeed\" or \"Fail\". Good players can vote only \"Succeed\". The quest will fail if a single Evil player on the quest votes \"Fail\".\n        </p>\n        <p>\n          As well as being randomly assigned to a team at the start of the game, you are also assigned one of the following roles:\n          <ul>\n            <li>Merlin: One player on Good is assigned the role of Merlin. Merlin knows the identity of everyone in Good, and thus can infer who is in Evil.</li>\n            <li>Assassin: One player on Evil is assigned the role of Assassin. If Good manages to succeed three quests the Assassin will be given the opportunity to assassinate Merlin. If they succeed in assassinating Merlin they will steal the win.</li>\n            <li>Loyal servent of Arthur: standard Good player</li>\n            <li>Servant of Mordred: standard Evil player</li>\n          </ul>\n        </p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\">\n        <button v-on:click=\"startNewGame(socket)\" class=\"btn btn-dark btn-lg btn-block\">Start a new game</button>\n      </div>\n    </div>\n    <div class=\"row py-2\">\n      <div class=\"col-md-12 text-center\">\n        <h5>- or -</h5>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\">\n         <router-link to=\"/avalon/thing\" class=\"btn btn-dark btn-lg btn-block\">Join an existing game</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\n  import Title from '@/components/avalon/Title.vue'\n  import io from \"socket.io-client\";\n  export default {\n    name: 'App',\n    components: {\n      Title\n    },\n    methods: {\n      startNewGame: function(socket) {\n        socket.emit('avalon-start-new-game');\n      }\n    },\n    data: function() {\n      let socket = null;\n      if (process.env.NODE_ENV == \"development\") {\n        socket = io.connect(\"http://localhost:3000\", {upgrade: false,transports: [\"websocket\"]});\n      } else {\n        socket = io.connect({upgrade: false,transports: [\"websocket\"]});\n      }\n      socket.on(\"avalon-room-created\", roomData => {\n        let roomId = roomData.id;\n        this.$router.replace({ name: `AvalonGame`, params: { socket, roomId } });\n      });\n      return { socket }\n    }\n  }\n\n\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Avalon.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Avalon.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Avalon.vue?vue&type=template&id=fea03e76&\"\nimport script from \"./Avalon.vue?vue&type=script&lang=js&\"\nexport * from \"./Avalon.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}